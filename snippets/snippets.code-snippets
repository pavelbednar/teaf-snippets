{
	"TEAF: Interface with instanceof": {
		"prefix": "interfaceInstanceOf",
		"body": [
			"${99:/**\n * $100\n */}",
			"export interface I${1:Name}${2: extends $3} {",
			"\t$0",
			"}\n",
			"export class $1 {",
			"\t${5:private static _properties: (keyof $1)[] = [$6];}",
			"\t${7:private static _methods: (keyof $1)[] = [$8];}",
			"\t${9:private static _interfaces = [$10];}",
			"\n",
			"\tpublic static [Symbol.hasInstance](instance: any): boolean {",
			"\t\treturn instance != null${11: && !this._properties.some((value) => !Reflect.has(instance, value))}${12: && !this._methods.some(value => typeof instance[value] !== \"function\")}${13: && this._interfaces.every((_interface) => instance instanceof _interface)};",
			"\t}",
			"}"
		],
		"description": "Creates a new Interface snippet with support of instanceof comparison"
	},
	"TEAF: Redux action interface": {
		"prefix": "actionInterface",
		"body": [
			"${99:/**\n * $100\n */}",
			"export interface I${1:Name}Action${2: extends ${3:Action}} {",
			"${4:\treadonly payload: {\n\t\t$5\n\t\\};}",
			"}",
			"export class I$1Action {",
			"\tpublic static [Symbol.hasInstance](instance: any): boolean {",
			"\t\treturn instance != null && instance.type === ${1/([A-Z][a-z]+$)|((^|[A-Z])[a-z]+)/${1:/upcase}${2:/upcase}${2:+_}/gm};",
			"\t}",
			"}"
		],
		"description": "Creates an interface for redux action"
	},
	"TEAF: Action Creator": {
		"prefix": "actionCreator",
		"body": [
			"${99:/**\n * $100\n */}",
			"export const create${1:Some}Action = (",
			"\t$2",
			"): I$1Action => ({",
			"\ttype: ${1/([A-Z][a-z]+$)|((^|[A-Z])[a-z]+)/${1:/upcase}${2:/upcase}${2:+_}/gm},",
			"${3:\tpayload: {\n\t\t$4\n\t\\},}",
			"${5:\tmeta: {\n\t\t$6\n\t\\},}",
			"});",
		],
		"description": "Creates a redux action creator."
	},
	"TEAF: Export all from package": {
		"prefix": "expall",
		"body": "export * from \"./${1:${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}}\";\n${0}",
		"description": "Export all from package "
	},
	"TEAF: Import Sinon package": {
		"prefix": "ims",
		"body": "import * as sinon from \"sinon\";${0}",
		"description": "Import sinon package"
	},
	"TEAF: Import {what} from {something}": {
		"prefix": "imf",
		"body": "import { ${2:what} } from \"${1:package}\";${0}",
		"description": "Import { whatever} from \" some package\""
	},
	"TEAF: React Functional Component": {
		"prefix": "rfc",
		"body": [
			"${99:/**\n * $100\n */}",
			"import React, {FunctionComponent} from \"react\";",
			"${1:const classNames = bemClassNames(\"$2\");}",
			"",
			"type ${2:${TM_FILENAME_BASE}}Props = {",
			"\t${3:children?: React.ReactNode;}",
			"}",
			"",
			"export const $2: FunctionComponent<$2Props> = (${4:{ ${5:children} \\}}) => {",
			"\treturn (",
			"\t\t<div${6: className={classNames()\\}}>",
			"\t\t\t${7:{children\\}}",
			"\t\t</div>",
			"\t)",
			"};\n",
		],
		"description": "React Functional Component"
	},
	"TEAF useState with type and default value": {
		"prefix": "useState",
		"body": "const [${1:prop}, set${1/(.*)/${1:/capitalize}/}] = useState<${3}>(${4});\n$5",
		"description": "useState with type and default value"
	},
	"TEAF: useEffect": {
		"prefix": "useEffect",
		"body": [
			"${99:/**\n * $100\n */}",
			"useEffect(() => {",
			"\t$0",
			"${2:\treturn () => {\n\t\t$3\n\t}}",
			"},[$1]);",
		],
		"description": "PB: useEffect snippet"
	}
}